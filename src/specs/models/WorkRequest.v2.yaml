title: Work Request
type: object
description: This is the schema for the event emitted by the UI when certain work is requested from the API/workers.
properties:
  ETag:
    type: string
    pattern: '^[a-fA-F0-9]+$'
    description: A UUID generated by the client submitting the work. Will be used to map `WorkResponse` objects to the request submitted.
  socketId:
    type: string
    description: The connection ID of the socket the client is using. The API will send the result back to the ID specified in this parameter.
  timeout:
    type: string
    format: date-time
    description: 'The timeout parameter set by the client. While processing work, all work items whose timeout field is past the current time will be discarded along the work processing chain.'
  experimentId:
    type: string
    description: The ID of the experiment for which this work was created.
  body:
    $ref: ./WorkRequestBodies.v2.yaml
  pagination:
    type: object
    description: |-
      Lazy-load results instead of return all results at once.

      If this object exists in the `WorkRequest`, the response returned will contain the response number given in `responseKey` to be ordered according to the pagination parameters.

      For `pagination` to work, the response given in `responseKey` must be tabular data loaded as a list of objects, where each object corresponds to a row in a table.
    properties:
      orderBy:
        type: string
        description: The column to order by.
      orderDirection:
        type: string
        enum:
          - ASC
          - DESC
        description: The direction of the ordering.
      offset:
        type: integer
        minimum: 0
        description: The starting position to start loading from.
      limit:
        type: integer
        minimum: 0
        description: The number of items to return.
      responseKey:
        type: integer
        minimum: 0
        description: The response to apply pagination to.
      filters:
        type: array
        items:
          anyOf:
            - description: 'A conditional filter to apply to the results by providing column, operation and value'
              properties:
                columnName:
                  type: string
                  description: The column name the filter is applied to.
                type:
                  type: string
                  pattern: numeric
                  description: The type of filter. Must be `numeric` for this type of filter.
                comparison:
                  type: string
                  description: The type of comparison - greater than or less than
                value:
                  type: integer
                  description: The value of the filter
              required:
                - columnName
                - type
                - comparison
                - value
            - description: Filter column by text (w/ wildcards). Useful for string-based filters.
              properties:
                columnName:
                  type: string
                  description: The name of the column the filter will be applied to.
                type:
                  type: string
                  description: The type of filter. Must be `text` for this type of filter.
                  pattern: text
                expression:
                  type: string
                  description: The wildcarded text to filter by.
              required:
                - columnName
                - type
                - expression
          type: object
    required:
      - orderBy
      - orderDirection
      - offset
      - limit
required:
  - ETag
  - socketId
  - timeout
  - experimentId
  - body
